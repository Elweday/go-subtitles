name: Build and Push Go Binaries to Local repository for Multiple OS.

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, linux, darwin]
        arch: [amd64, arm64]


    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.22'  # specify the Go version you are using

    - name: Build project
      run: |

        # List of operating systems and architectures
        OS_LIST=("windows" "linux" "darwin")
        ARCH_LIST=("amd64" "arm64")
        mkdir -p bin

        for OS in "${OS_LIST[@]}"; do
          for ARCH in "${ARCH_LIST[@]}"; do
            # Set output file name
            OUTPUT="./bin/$OS-$ARCH"
            env GOOS=$OS GOARCH=$ARCH; go build -o $OUTPUT

            if [ $? -ne 0 ]; then
              echo "Failed to build for $OS/$ARCH"
              exit 1
            else
              echo "Successfully built $OUTPUT"
            fi
          done
        done

        echo "All builds completed."
      env:
        CGO_ENABLED: 0


    - name: Configure git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Checkout target repository
      uses: actions/checkout@v2
      with:
        repository: ${{ secrets.REPOSITORY }} #<target-repo-owner>/<target-repo-name>
        token: ${{ secrets.PUSH_TOKEN }}
        path: target-repo

    - name: Copy binaries to target repository
      run: |
        cp -r ./bin/* ./target-repo/bin

    - name: Commit and push changes
      run: |
        cd target-repo
        git pull
        git add .
        git commit -m "Update binaries for multiple OS"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.PUSH_TOKEN }}
      



